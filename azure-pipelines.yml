pool:
  name: Hosted Ubuntu 1604
  
variables:
  solution: '**/*.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '**/*.csproj'
    workingDirectory: '$(System.DefaultWorkingDirectory)/app1'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'
    workingDirectory: '$(System.DefaultWorkingDirectory)/app1'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '**/*UnitTests/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'
    workingDirectory: '$(System.DefaultWorkingDirectory)/app1'

- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output "$(build.artifactstagingdirectory)"'
    zipAfterPublish: True
    workingDirectory: '$(System.DefaultWorkingDirectory)/app1'

- task: DotNetCoreCLI@2
  displayName: 'Publish functional tests'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/*FunctionalTest*.csproj'
    arguments: '--configuration $(BuildConfiguration) --output "$(build.artifactstagingdirectory)/FunctionalTests"'
    zipAfterPublish: false
    modifyOutputPath: false
    workingDirectory: '$(System.DefaultWorkingDirectory)/app1'

- task: CopyFiles@2
  displayName: 'Copy runsettings file'
  inputs:
    Contents: '**/*.runsettings'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/FunctionalTests'
    flattenFolders: true

- task: CopyFiles@2
  displayName: 'Copy ARM templates'
  inputs:
    SourceFolder: templates
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'

